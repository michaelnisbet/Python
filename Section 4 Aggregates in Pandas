
#CodeAcademy 
#Python 
# Analyze Data with Python
#Section 4 Aggregates in Pandas

#Introduction to Numpy
#Statistics For Numpy

#Calculating Column Statistics
import codecademylib
import pandas as pd

orders = pd.read_csv('orders.csv')

print(orders.head(10))

most_expensive = orders.price.max()

print(most_expensive)

num_colors = orders.shoe_color.nunique()

print(num_colors)

#Calculating Aggregate Functions I
import codecademylib
import pandas as pd

orders = pd.read_csv('orders.csv')
print(orders.head(10))

pricey_shoes = orders.groupby('shoe_type').price.max()
print(pricey_shoes)
print(type(pricey_shoes))

#Calculating Aggregate Functions II
import codecademylib
import pandas as pd

orders = pd.read_csv('orders.csv')

pricey_shoes = orders.groupby('shoe_type').price.max().reset_index()

print(pricey_shoes)
print(type(pricey_shoes))

#Calculating Aggregate Functions III
import codecademylib
import numpy as np
import pandas as pd

orders = pd.read_csv('orders.csv')
print(orders.head(10))
cheap_shoes = orders.groupby('shoe_color').price.apply(lambda x: np.percentile(x, 25)).reset_index()

print(cheap_shoes)


#Calculating Aggregate Functions IV
import codecademylib
import numpy as np
import pandas as pd

orders = pd.read_csv('orders.csv')

shoe_counts = orders.groupby(['shoe_type','shoe_color'])['id'].count().reset_index()

print(shoe_counts)

#Pivot Tables

import codecademylib
import numpy as np
import pandas as pd

orders = pd.read_csv('orders.csv')

shoe_counts = orders.groupby(['shoe_type', 'shoe_color']).id.count().reset_index()

shoe_counts_pivot = shoe_counts.pivot(columns ='shoe_color', index='shoe_type', values='id').reset_index()
print(shoe_counts_pivot)


#Review
import codecademylib
import pandas as pd

user_visits = pd.read_csv('page_visits.csv')

print(user_visits.head(10))

click_source = user_visits.groupby('utm_source').id.count().reset_index()

print(click_source)

click_source_by_month = user_visits.groupby(['utm_source', 'month']).id.count().reset_index()

click_source_by_month_pivot = click_source_by_month.pivot(columns = 'month', index = 'utm_source', values = 'id').reset_index()
print(click_source_by_month_pivot)

#A/B Testing for ShoeFly.com
import codecademylib
import pandas as pd

ad_clicks = pd.read_csv('ad_clicks.csv')
print(ad_clicks.head(5))

utm_source = ad_clicks.groupby(['utm_source']).user_id.count().reset_index()

print(utm_source)

#ad_clicks['is_click'] = ad_clicks.ad_click_timestamp.apply( lambda x: True if x > 0 else False )
ad_clicks['is_click'] = ~ad_clicks.ad_click_timestamp.isnull()
print(ad_clicks.head(5))

clicks_by_source = ad_clicks.groupby(['utm_source','is_click']).user_id.count().reset_index()

print(clicks_by_source)

clicks_pivot = clicks_by_source.pivot(columns = 'is_click', index = 'utm_source', values='user_id').reset_index()

clicks_pivot['percent_clicked'] = \
   clicks_pivot[True] / \
   (clicks_pivot[True] + 
    clicks_pivot[False])

print (clicks_pivot)

print(ad_clicks.groupby(['experimental_group']).user_id.count().reset_index())

print(
  ad_clicks.groupby(['experimental_group','is_click'])\
  .user_id.count().reset_index().\
  pivot(columns = 'is_click', index = 'experimental_group', values='user_id')\
  .reset_index()
)

a_clicks = ad_clicks[ad_clicks.experimental_group == 'A']
#print(a_clicks)

a_clicks_pivot = ad_clicks.groupby(['is_click','day']).user_id.count().reset_index().pivot(index = 'day', columns = 'is_click', values = 'user_id').reset_index()

a_clicks_pivot['percent'] = a_clicks_pivot[True] / (a_clicks_pivot[True]  + a_clicks_pivot[False])

print(a_clicks_pivot)


b_clicks = ad_clicks[ad_clicks.experimental_group == 'B']
#print(b_clicks)

b_clicks_pivot = ad_clicks.groupby(['is_click','day']).user_id.count().reset_index().pivot(index = 'day', columns = 'is_click', values = 'user_id').reset_index()

b_clicks_pivot['percent'] = b_clicks_pivot[True] / (b_clicks_pivot[True]  + b_clicks_pivot[False])

print(b_clicks_pivot)